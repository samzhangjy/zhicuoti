"""multiple teachers in one class and subjects

Revision ID: a4b17f4c33ec
Revises: 4a6f28ead417
Create Date: 2025-01-18 20:57:40.251594

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'a4b17f4c33ec'
down_revision: Union[str, None] = '4a6f28ead417'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subject',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tag',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('subject_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('classteacherlink',
    sa.Column('class_id', sa.Uuid(), nullable=False),
    sa.Column('teacher_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('class_id', 'teacher_id')
    )
    op.drop_constraint('class_teacher_id_fkey', 'class', type_='foreignkey')
    op.drop_column('class', 'teacher_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('class', sa.Column('teacher_id', sa.UUID(), autoincrement=False, nullable=False))
    op.create_foreign_key('class_teacher_id_fkey', 'class', 'user', ['teacher_id'], ['id'])
    op.drop_table('classteacherlink')
    op.drop_table('tag')
    op.drop_table('subject')
    # ### end Alembic commands ###
