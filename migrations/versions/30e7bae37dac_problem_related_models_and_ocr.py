"""problem-related models and ocr

Revision ID: 30e7bae37dac
Revises: 742782bc5523
Create Date: 2025-01-25 17:38:11.417667

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '30e7bae37dac'
down_revision: Union[str, None] = '742782bc5523'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('TEXT', 'IMAGE', name='problemdescriptiontype').create(op.get_bind())
    op.create_table('problem',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('original_answer', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('original_answer_type', postgresql.ENUM('TEXT', 'IMAGE', name='problemdescriptiontype', create_type=False), nullable=True),
    sa.Column('correct_answer', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('correct_answer_type', postgresql.ENUM('TEXT', 'IMAGE', name='problemdescriptiontype', create_type=False), nullable=True),
    sa.Column('subject_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['subject_id'], ['subject.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ocrresult',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('problem_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['problem_id'], ['problem.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tagproblemlink',
    sa.Column('tag_id', sa.Uuid(), nullable=False),
    sa.Column('problem_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['problem_id'], ['problem.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('tag_id', 'problem_id')
    )
    op.create_table('ocrbox',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('x1', sa.Integer(), nullable=False),
    sa.Column('y1', sa.Integer(), nullable=False),
    sa.Column('x2', sa.Integer(), nullable=False),
    sa.Column('y2', sa.Integer(), nullable=False),
    sa.Column('detected_text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('ocr_result_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['ocr_result_id'], ['ocrresult.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ocrbox')
    op.drop_table('tagproblemlink')
    op.drop_table('ocrresult')
    op.drop_table('problem')
    sa.Enum('TEXT', 'IMAGE', name='problemdescriptiontype').drop(op.get_bind())
    # ### end Alembic commands ###
